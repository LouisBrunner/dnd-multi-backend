name: Build

on: [push, pull_request]

jobs:
  build:
    name: Build (Node ${{ matrix.node-version }})

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20, 22]

    steps:
      - uses: actions/checkout@v5
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install dependencies
        run: npm install
      - run: npm run vet:ci
      - run: npm run test:ci
      - name: Coveralls
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: node-${{ matrix.node }}
          parallel: true
      - run: npm run build:examples
      - name: Upload examples build
        uses: actions/upload-artifact@v4
        if: ${{ matrix.node-version == '22' }}
        with:
          name: Examples
          path: examples

  finish:
    name: Coverage

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Coveralls Finished
        uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true

  deploy:
    name: Deploy

    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Download examples build
        uses: actions/download-artifact@v5
        with:
          name: Examples
          path: examples
      - name: Deploy
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          enable_jekyll: true
          publish_dir: ./
          force_orphan: true
